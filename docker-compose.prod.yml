version: '3.8'

services:
  # Web应用服务 - 生产环境配置
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: cloudfare-qq-mail-web-prod
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-cloudfare_qq_mail}
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY}
      - QQ_EMAIL=${QQ_EMAIL}
      - QQ_AUTH_CODE=${QQ_AUTH_CODE}
      - TARGET_DOMAIN=${TARGET_DOMAIN}
      - DEBUG_MODE=False
      - RESEND_API_KEY=${RESEND_API_KEY}
      - YIPAY_PID=${YIPAY_PID}
      - YIPAY_KEY=${YIPAY_KEY}
      - YIPAY_GATEWAY=${YIPAY_GATEWAY}
      - DOMAIN=${DOMAIN}
    volumes:
      - uploads_data:/app/uploads
      - temp_attachments_data:/app/temp_attachments
      - received_emails_data:/app/received_emails
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'

  # MySQL数据库服务 - 生产环境配置
  db:
    image: mysql:8.0
    container_name: cloudfare-qq-mail-db-prod
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME:-cloudfare_qq_mail}
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    ports:
      - "127.0.0.1:3306:3306"  # 只绑定到本地，提高安全性
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/backup:/backup  # 备份目录
    restart: unless-stopped
    networks:
      - app-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --innodb-buffer-pool-size=256M
      --max-connections=100
      --query-cache-size=0
      --query-cache-type=0
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Nginx反向代理 (生产环境推荐)
  nginx:
    image: nginx:alpine
    container_name: cloudfare-qq-mail-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro  # SSL证书目录
    depends_on:
      - web
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - nginx

  # Redis缓存 (可选，用于会话存储)
  redis:
    image: redis:7-alpine
    container_name: cloudfare-qq-mail-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - cache

# 数据卷 - 生产环境使用命名卷
volumes:
  mysql_data:
    driver: local
  uploads_data:
    driver: local
  temp_attachments_data:
    driver: local
  received_emails_data:
    driver: local
  redis_data:
    driver: local

# 网络配置
networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
